---
import Layout from '../layouts/Layout.astro';
import QueueManager from '../components/QueueManager.astro';
import QueueViewer from '../components/QueueViewer.astro';
---

<Layout title="kickern.in">
  <div class="container mx-auto px-4 py-6 max-w-4xl">
    <header class="mb-8">
      <div class="flex items-center justify-between mb-4">
        <a href="/" class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 flex items-center gap-2">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
          </svg>
          Zurück zur Übersicht
        </a>
        <a 
          id="manageBtn"
          href="?manage=true"
          class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-medium transition hidden"
        >
          Manager-Modus
        </a>
      </div>
      
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6">
        <h1 id="standortTitle" class="text-3xl font-bold text-gray-900 dark:text-white mb-2"></h1>
        <p id="tischTitle" class="text-lg text-gray-600 dark:text-gray-400"></p>
        <div id="manageBadge" class="mt-4 inline-flex items-center gap-2 bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 px-3 py-1 rounded-full text-sm hidden">
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
          </svg>
          Manager-Modus
        </div>
      </div>
    </header>

    <div id="viewerWrap">
      <QueueViewer standort="" tisch="" />
    </div>
    
    <div id="managerWrap" class="hidden">
      <QueueManager standort="" tisch="" />
    </div>
  </div>

  <script>
    const formatDisplay = (value: string): string => {
      if (!value) return '';
      return value.replace(/-/g, ' ').replace(/\b\w/g, (ch: string) => ch.toUpperCase());
    };

    const segments = window.location.pathname.replace(/^\/+|\/+$/g, '').split('/');
    const standort = decodeURIComponent(segments[0] || '');
    const tisch = decodeURIComponent(segments[1] || '');
    const isManageMode = new URLSearchParams(window.location.search).has('manage');

    // Wenn Route ungültig ist, zur Startseite
    if (!standort || !tisch) {
      window.location.replace('/');
    } else {
      const standortTitle = document.getElementById('standortTitle');
      const tischTitle = document.getElementById('tischTitle');
      const manageBtn = document.getElementById('manageBtn');
      const manageBadge = document.getElementById('manageBadge');
      const viewerWrap = document.getElementById('viewerWrap');
      const managerWrap = document.getElementById('managerWrap');

      if (standortTitle) standortTitle.textContent = formatDisplay(standort);
      if (tischTitle) tischTitle.textContent = formatDisplay(tisch);

      if (isManageMode) {
        manageBtn?.classList.add('hidden');
        manageBadge?.classList.remove('hidden');
        viewerWrap?.classList.add('hidden');
        managerWrap?.classList.remove('hidden');
      } else {
        manageBtn?.classList.remove('hidden');
        manageBadge?.classList.add('hidden');
        viewerWrap?.classList.remove('hidden');
        managerWrap?.classList.add('hidden');
      }
    }

    // Hinweis auf fehlende Firebase-Konfiguration
    if (!import.meta.env.PUBLIC_FIREBASE_API_KEY) {
      console.warn('Firebase ist noch nicht konfiguriert. Bitte füge die Firebase-Konfiguration in die .env-Datei ein.');
    }
  </script>
</Layout>